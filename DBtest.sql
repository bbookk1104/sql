CREATE TABLE EMP( -- 사원정보
    EMP_ID      VARCHAR2(5)     PRIMARY KEY,
    EMP_NAME    VARCHAR2(20)    NOT NULL,
    EMP_GENDER  CHAR(1)         CHECK(EMP_GENDER IN ('M','F')),
    EMP_ADDR    VARCHAR2(20),
    EMP_PHONE   VARCHAR2(13)    UNIQUE NOT NULL,
    EMP_NO      CHAR(14)    UNIQUE NOT NULL
);

ALTER TABLE EMP
ADD (EMP_ADDR VARCHAR2(20));

CREATE SEQUENCE EMP_SEQ;

INSERT INTO EMP
VALUES('E-'||EMP_SEQ.NEXTVAL,'사원1','M','서울','010-1111-1111','771122-1234567');
SELECT *FROM EMP;

CREATE TABLE ATTENDANCE( -- 출결
    ATT_DATE    DATE,
    EMP_ID      VARCHAR2(5)     REFERENCES EMP
);
INSERT INTO ATTENDANCE VALUES(SYSDATE,'E-1');
SELECT *FROM ATTENDANCE;
--------------------------------------------------------------------------------
-- DB모델링 실습1 [고객정보,상담,수리,반품]
CREATE TABLE CUSTOMER( -- 고객정보
    CUSTOMER_NO VARCHAR2(5) PRIMARY KEY,                   --고객번호
    CUSTOMER_NAME VARCHAR2(20) NOT NULL,                   --이름
    CUSTOMER_GENDER CHAR(3) CHECK(CUS_GENDER IN('남','여')),--성별
    CUSTOMER_PHONE VARCHAR2(15) UNIQUE NOT NULL            --전화번호
);

CREATE TABLE CS ( -- 상담일지
    CS_NO VARCHAR2(5) PRIMARY KEY,                        --상담번호
    CS_REQUEST CHAR(6) CHECK(CS_REQUSET IN('수리','반품')), --상담내용
    CUSTOMER_NO VARCHAR2(5) REFERENCES CUSTOMER,          --고객번호(고객정보 외래키)
    CS_TYPE CHAR(1) CHECK(CS_TYPE IN('A','B'))            --상담타입
);

CREATE TABLE REFUND( -- 반품
    CS_NO VARCHAR2(5) REFERENCES CS,    --상담번호(상담일지 외래키)
    REFUND_CONTENT VARCHAR2(100)                   --반품내역
);
--------------------------------------------------------------------------------
DROP TABLE TEACHER_TBL;
DROP TABLE STUDENT_TBL;
DROP TABLE CURRICULUM_TBL;
DROP TABLE REGISTRATION_TBL;
DROP SEQUENCE TEACHER_SEQ;
DROP SEQUENCE STUDENT_SEQ;
DROP SEQUENCE CUR_SEQ;

CREATE TABLE TEACHER_TBL(
    TEACHER_NO  NUMBER  PRIMARY KEY,
    TEACHER_NAME    VARCHAR2(15)    NOT NULL,
    TEACHER_PHONE   VARCHAR2(13)    UNIQUE NOT NULL
);
CREATE SEQUENCE TEACHER_SEQ;

CREATE TABLE STUDENT_TBL(
    STUDENT_NO  NUMBER  PRIMARY KEY,
    STUDENT_NAME    VARCHAR2(15)    NOT NULL,
    STUDENT_PHONE   VARCHAR2(13)    UNIQUE NOT NULL
);
CREATE SEQUENCE STUDENT_SEQ;

CREATE TABLE CURRICULUM_TBL(
    CUR_CODE    NUMBER  PRIMARY KEY,
    CUR_TITLE   VARCHAR2(100)   NOT NULL,
    CUR_PERIOD  NUMBER    NOT NULL,
    CUR_FEE     NUMBER  NOT NULL,
    TEACHER_NO  NUMBER  REFERENCES TEACHER_TBL
);
CREATE SEQUENCE CUR_SEQ;

CREATE TABLE REGISTRATION_TBL(
    CUR_CODE    NUMBER  REFERENCES CURRICULUM_TBL ON DELETE CASCADE,
    STUDENT_NO  NUMBER  REFERENCES STUDENT_TBL ON DELETE CASCADE
);

INSERT INTO TEACHER_TBL VALUES(
TEACHER_SEQ.NEXTVAL, '강사1', '010-1111-1111');
INSERT INTO TEACHER_TBL VALUES(
TEACHER_SEQ.NEXTVAL, '강사2', '010-2222-2222');
INSERT INTO TEACHER_TBL VALUES(
TEACHER_SEQ.NEXTVAL, '강사3', '010-3333-3333');
INSERT INTO TEACHER_TBL VALUES(
TEACHER_SEQ.NEXTVAL, '강사4', '010-4444-4444');
INSERT INTO TEACHER_TBL VALUES(
TEACHER_SEQ.NEXTVAL, '강사5', '010-5555-5555');
SELECT * FROM TEACHER_TBL;

INSERT INTO STUDENT_TBL VALUES(
STUDENT_SEQ.NEXTVAL, '학생1', '010-1000-1000');
INSERT INTO STUDENT_TBL VALUES(
STUDENT_SEQ.NEXTVAL, '학생2', '010-2000-2000');
INSERT INTO STUDENT_TBL VALUES(
STUDENT_SEQ.NEXTVAL, '학생3', '010-3000-3000');
INSERT INTO STUDENT_TBL VALUES(
STUDENT_SEQ.NEXTVAL, '학생4', '010-4000-4000');
INSERT INTO STUDENT_TBL VALUES(
STUDENT_SEQ.NEXTVAL, '학생5', '010-5000-5000');
SELECT * FROM STUDENT_TBL;

DESC CURRICULUM_TBL;
INSERT INTO CURRICULUM_TBL VALUES(
CUR_SEQ.NEXTVAL, '자바', '50', 10000000, 3);
INSERT INTO CURRICULUM_TBL VALUES(
CUR_SEQ.NEXTVAL, '오라클', '30', 20000000, 3);
INSERT INTO CURRICULUM_TBL VALUES(
CUR_SEQ.NEXTVAL, '자바', '50', 10000000, 2);
SELECT * FROM CURRICULUM_TBL;

DESC REGISTRATION_TBL;
INSERT INTO REGISTRATION_TBL VALUES(3,4);
INSERT INTO REGISTRATION_TBL VALUES(2,4);
INSERT INTO REGISTRATION_TBL VALUES(3,3);
SELECT * FROM REGISTRATION_TBL;

-- 학생 입장에서 듣고있는 수업 조회
SELECT STUDENT_NO FROM STUDENT_TBL WHERE STUDENT_NAME = '학생4';
SELECT CUR_CODE FROM REGISTRATION_TBL WHERE STUDENT_NO = 4;
SELECT * FROM CURRICULUM_TBL WHERE CUR_CODE = 3;

SELECT CUR_TITLE, CUR_FEE, CUR_PERIOD, TEACHER_NAME, TEACHER_PHONE
FROM curriculum_tbl
JOIN teacher_tbl USING(TEACHER_NO)
WHERE cur_code IN
    (SELECT CUR_CODE FROM REGISTRATION_TBL WHERE STUDENT_NO =
        (SELECT STUDENT_NO FROM STUDENT_TBL WHERE STUDENT_NAME = '학생4'));
        
-- 강사 입장에서 진행하고있는 수업 조회
SELECT TEACHER_NO FROM TEACHER_TBL WHERE TEACHER_NAME = '강사3';
SELECT CUR_CODE FROM curriculum_tbl WHERE TEACHER_NO = 3;

SELECT STUDENT_NO FROM REGISTRATION_TBL WHERE CUR_CODE IN (1,2);

SELECT * FROM STUDENT_TBL WHERE STUDENT_NO = 4;
--------------------------------------------------------------------------------
CREATE TABLE "BORROW" (
	"BOR_NO"	NUMBER		NOT NULL,
	"BOOK_ID"	NUMBER		NOT NULL,
	"MEM_ID"	NUMBER		NOT NULL,
	"BOR_DATE"	DATE		NOT NULL,
	"RETURN"	NUMBER	DEFAULT 0	NOT NULL);

COMMENT ON COLUMN "BORROW"."BOOK_ID" IS '도서의 고유번호';
COMMENT ON COLUMN "BORROW"."MEM_ID" IS '도서관 회원의 고유번호';
COMMENT ON COLUMN "BORROW"."RETURN" IS '0:미반납 1:반납완료';

CREATE TABLE "RESERVE" (
	"RES_NO"	NUMBER		NOT NULL,
	"BOOK_ID"	NUMBER		NOT NULL,
	"MEM_ID"	NUMBER		NOT NULL);

COMMENT ON COLUMN "RESERVE"."RES_NO" IS '(SEQ)';
COMMENT ON COLUMN "RESERVE"."BOOK_ID" IS '도서의 고유번호';
COMMENT ON COLUMN "RESERVE"."MEM_ID" IS '도서관 회원의 고유번호';

CREATE TABLE "STAFF" (
	"MEM_ID"	NUMBER		NOT NULL,
	"BUY_COMPANY"	VARCHAR(255)		NOT NULL);

COMMENT ON COLUMN "STAFF"."MEM_ID" IS '직원의 고유번호(FK,PK,SEQ)';
COMMENT ON COLUMN "STAFF"."BUY_COMPANY" IS '도서 구입하는 출판사나 대형서점';

CREATE TABLE "BOOK" (
	"BOOK_ID"	NUMBER		NOT NULL,
	"BOOK_CODE"	NUMBER		NOT NULL,
	"BOOK_CODENAME"	VARCHAR2(30)		NOT NULL,
	"BOOK_NAME"	VARCHAR2(300)		NOT NULL,
	"WRITER"	VARCHAR2(30)		NOT NULL,
	"PUBLISHER"	VARCHAR2(100)		NOT NULL,
	"PUB_YEAR"	CHAR(4)		NOT NULL,
	"BOOK_BOR"	NUMBER	DEFAULT 0	NOT NULL);

COMMENT ON COLUMN "BOOK"."BOOK_ID" IS '도서의 고유번호(SEQ)';
COMMENT ON COLUMN "BOOK"."BOOK_CODE" IS '분류 기준 번호';
COMMENT ON COLUMN "BOOK"."BOOK_CODENAME" IS '분류 기준';
COMMENT ON COLUMN "BOOK"."BOOK_NAME" IS '도서 이름';
COMMENT ON COLUMN "BOOK"."WRITER" IS '도서 저자 이름';
COMMENT ON COLUMN "BOOK"."PUBLISHER" IS '도서 출판사 이름';
COMMENT ON COLUMN "BOOK"."PUB_YEAR" IS '도서가 출판된 연도';
COMMENT ON COLUMN "BOOK"."BOOK_BOR" IS '대출여부';

CREATE TABLE "MEMBER" (
	"MEM_ID"	NUMBER		NOT NULL,
	"MEM_NAME"	VARCHAR2(15)		NOT NULL,
	"MEM_TYPE"	CHAR(6)		NOT NULL,
	"BOR_PERIOD"	NUMBER		NOT NULL,
	"BOR_NUM"	CHAR(1)		NOT NULL);

COMMENT ON COLUMN "MEMBER"."MEM_ID" IS '도서관 회원의 고유번호(SEQ)';
COMMENT ON COLUMN "MEMBER"."MEM_TYPE" IS 'CHECK IN(학생, 교수, 직원)';
COMMENT ON COLUMN "MEMBER"."BOR_PERIOD" IS 'CHECK IN(7,10,14)';
COMMENT ON COLUMN "MEMBER"."BOR_NUM" IS 'CHECK IN(1,2,3)';

ALTER TABLE "BORROW" ADD CONSTRAINT "PK_BORROW" PRIMARY KEY (
	"BOR_NO");
ALTER TABLE "RESERVE" ADD CONSTRAINT "PK_RESERVE" PRIMARY KEY (
	"RES_NO");
ALTER TABLE "STAFF" ADD CONSTRAINT "PK_STAFF" PRIMARY KEY (
	"MEM_ID");
ALTER TABLE "BOOK" ADD CONSTRAINT "PK_BOOK" PRIMARY KEY (
	"BOOK_ID");
ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEM_ID");
ALTER TABLE "STAFF" ADD CONSTRAINT "FK_MEMBER_TO_STAFF_1" FOREIGN KEY (
	"MEM_ID")
    
REFERENCES "MEMBER" ("MEM_ID");
